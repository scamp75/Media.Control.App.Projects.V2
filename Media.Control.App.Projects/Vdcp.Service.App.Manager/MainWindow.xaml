<Window x:Class="Vdcp.Service.App.Manager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Vdcp.Service.App.Manager"
        xmlns:conv="clr-namespace:Vdcp.Service.App.Manager.Model" 
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        mc:Ignorable="d"
           WindowStyle="None"
        Background="Transparent"
        Loaded="Window_Loaded"
        MaxWidth="450" MaxHeight="180" 
        MinHeight="250" MinWidth="450" 
        Height="250" Width="450"
        TextElement.Foreground="WhiteSmoke">

    <!--xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"-->
    <Window.Resources>
        <ResourceDictionary>
            <SolidColorBrush x:Key="ButtonBackColor" Color="#FF373734"/>
            <SolidColorBrush x:Key="ButtonBorderColor" Color="#FF52524E"/>
            <SolidColorBrush x:Key="PanleColor" Color="#333333"/>
            <SolidColorBrush x:Key="TitleColor" Color="#FF1E1E1F"/>
            <SolidColorBrush x:Key="TimePanleColor" Color="#FF6C6C88"/>
            <SolidColorBrush x:Key="ButtonForegroundColor" Color="#FFCECECE"/>
            <SolidColorBrush x:Key="BaceBorderThickness" Color="Black"/>
            <SolidColorBrush x:Key="Bace1BorderThickness" Color="#FF211E1E"/>


            <Style x:Key="FlatCheckBoxStyle" TargetType="CheckBox" 
                   BasedOn="{StaticResource MahApps.Styles.CheckBox}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid>
                                <Border x:Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="3"
                                        SnapsToDevicePixels="True">
                                    <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      RecognizesAccessKey="True" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#FF6C6C88"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.7"/>
                                    <Setter TargetName="Border" Property="Background" Value="#FF373734"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FF6C6C88"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FlatRoundedButtonStyle" TargetType="Button" 
                BasedOn="{StaticResource MahApps.Styles.Button.Flat}">
                 <!--기본 Flat 버튼의 스타일을 기반으로 하고, 여기에 추가 수정--> 
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Border"
                         Background="{TemplateBinding Background}"
                    
                         BorderThickness="1"
                         CornerRadius="3"  
                     
                           SnapsToDevicePixels="True">
                                <ContentPresenter HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                     <!--마우스 오버 시 배경색(원하는 값으로 수정)--> 
                                    <Setter TargetName="Border" Property="Background" Value="#595e5e"/>

                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FFEEEEEE"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                     <!--클릭 시 배경색(원하는 값으로 수정)--> 
                                    <Setter TargetName="Border" Property="Background" Value="#FFCCCCCC"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.7" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FF6C6C88"/>
                                    <Setter TargetName="Border" Property="Background" Value="#FF373734"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <conv:BoolToEnabledConverter x:Key="BoolToEnabledConverter"/>
        </ResourceDictionary>
        
        
    </Window.Resources>

    <Grid >
        <Border Background ="{DynamicResource PanleColor}"
             CornerRadius="5"
             BorderBrush="{DynamicResource ButtonBackColor}"
             BorderThickness="0">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="10"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Orientation="Horizontal" Height="30" >
                    <TextBlock Text="Vdcp Service Manager" FontSize="14" FontWeight="Bold" Margin="160,0,0,0"/>

                    <Button Height="25" Width="25" Click="butConfig_Click" Margin="90,0,0,0"
                            HorizontalAlignment="Left" VerticalAlignment="Top"
                            Style="{StaticResource FlatRoundedButtonStyle  }" >
                        <iconPacks:PackIconFontAwesome Kind="GearsSolid" />
                    </Button>

                    <!--<Button Height="20" Width ="30" FontSize="10" Click="butConfig_Click" Content="Config" Margin="100,0,0,0"
                            Style="{StaticResource MaterialDesignFlatLightButton}">
                       
                        --><!--<materialDesign:PackIcon
                             Width="{StaticResource IconSize}"
                             Height="{StaticResource IconSize}"
                             Kind="Cogs" />--><!--
                    </Button>-->
                </StackPanel>


                <StackPanel Grid.Row="1" Orientation="Horizontal" Width="250" Height="35">

                    <Button Name="StartServiceButton" Content="Vdpc Start" Width="120" Height="35" Margin="0,0,10,0"
                          HorizontalAlignment="Left" VerticalAlignment="Top" Style="{StaticResource FlatRoundedButtonStyle}"
                           Click="StartServiceButton_Click"/>

                    <Button Name="StopServiceButton" Content="Vdcp Stop" Width="120" Height="35"
                          HorizontalAlignment="Right" VerticalAlignment="Top" Style="{StaticResource FlatRoundedButtonStyle}"
                          Click="StopServiceButton_Click" IsEnabled="False"/>

                </StackPanel>


                <StackPanel Grid.Row="2" Orientation="Horizontal"  Margin="5,0,0,0">
                    <TextBlock   x:Name="txtMessage" Text="{Binding ApiMessage}" 
                            Margin="5,8,0,0"  Width="180" FontWeight="Bold"  Foreground="Yellow" />

                    <TextBox  Text="{Binding IpAddress}" Margin="30,2,2,2" Width="120" 
                                Background="{StaticResource PanleColor}" 
                                BorderBrush="{StaticResource TitleColor}"
                              Foreground="WhiteSmoke"
                              Style="{StaticResource MahApps.Styles.TextBox}"  />

                    <ComboBox Width="90" Margin="2,0,0,0"
                              Foreground="WhiteSmoke" Height="25"
                              HorizontalAlignment="Left" Style="{StaticResource MahApps.Styles.ComboBox}"
                              Background="{StaticResource PanleColor}" 
                             BorderBrush="{StaticResource TitleColor}"
                             ItemsSource="{Binding ComPortTypeList}" 
                             SelectedItem="{Binding SelectedComPort}"/>           
                </StackPanel>

               

                <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="5,0,0,0">
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                    </Grid>

                    <CheckBox Grid.Column="0" IsEnabled="{Binding IsEnabledCom, Converter={StaticResource BoolToEnabledConverter}}" Content="COM3" IsChecked="{Binding IsCom3}"/>
                    <CheckBox Grid.Column="1" IsEnabled="{Binding IsEnabledCom, Converter={StaticResource BoolToEnabledConverter}}" Content="COM4" IsChecked="{Binding IsCom4}" Margin="2,0,0,0" />
                    <CheckBox Grid.Column="2" IsEnabled="{Binding IsEnabledCom, Converter={StaticResource BoolToEnabledConverter}}" Content="COM5" IsChecked="{Binding IsCom5}" Margin="2,0,0,0" />
                    <CheckBox Grid.Column="3" IsEnabled="{Binding IsEnabledCom, Converter={StaticResource BoolToEnabledConverter}}" Content="COM6" IsChecked="{Binding IsCom6}" Margin="2,0,0,0" />
                    <CheckBox Grid.Column="4" IsEnabled="{Binding IsEnabledCom, Converter={StaticResource BoolToEnabledConverter}}" Content="COM7" IsChecked="{Binding IsCom7}" Margin="2,0,0,0" />
                    <CheckBox Grid.Column="5" IsEnabled="{Binding IsEnabledCom, Converter={StaticResource BoolToEnabledConverter}}" Content="COM8" IsChecked="{Binding IsCom8}" Margin="2,0,0,0"/>
                    <CheckBox Grid.Column="6" IsEnabled="{Binding IsEnabledCom, Converter={StaticResource BoolToEnabledConverter}}" Content="COM9" IsChecked="{Binding IsCom9}" Margin="2,0,0,0"/>

                </StackPanel>

                <ProgressBar Grid.Row="4" IsIndeterminate="{Binding IsIndeterminate}" Height="5"/>

                <Button  Grid.Row="5" Content="Close" Width="70" Height="28" Style="{StaticResource FlatRoundedButtonStyle}"
                      HorizontalAlignment="Center" VerticalAlignment="Center" 
                       Click="Close_Click"/>

            </Grid>


        </Border>
    </Grid>
</Window>

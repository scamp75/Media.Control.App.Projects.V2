<Window x:Class="Vdcp.Service.App.Manager.View.ConfigWindwos"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Vdcp.Service.App.Manager.View"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
           xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:materialDesignConverters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
        
         WindowStyle="None"
         ResizeMode="CanResizeWithGrip"
         Background="Transparent"
         AllowsTransparency="True" 
         BorderBrush="Transparent"
         BorderThickness="0"
         MinHeight="750" MinWidth="750"
         MaxWidth="750"
         Title="Vdcp Config" Height="750" Width="750"
         MouseDown="Window_MouseDown"
         Loaded="Window_Loaded"
         TextElement.Foreground="{DynamicResource MaterialDesign.Brush.Foreground}" >

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.Shared.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Dark.Violet.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush x:Key="ButtonBackColor" Color="#FF373734"/>
            <SolidColorBrush x:Key="ButtonBorderColor" Color="#FF52524E"/>
            <SolidColorBrush x:Key="PanleColor" Color="#333333"/>
            <SolidColorBrush x:Key="PanleColor1" Color="#FF3E3D3D"/>
            <SolidColorBrush x:Key="TitleColor" Color="#FF1E1E1F"/>
            <SolidColorBrush x:Key="TimePanleColor" Color="#FF6C6C88"/>
            <SolidColorBrush x:Key="ButtonForegroundColor" Color="#FFCECECE"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <Style x:Key="FlatRoundedToggleButtonStyle" TargetType="ToggleButton"
                BasedOn="{StaticResource MahApps.Styles.ToggleButton.Flat}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border x:Name="Border"
                        Background="{TemplateBinding  BorderBrush}"
                        BorderBrush="{TemplateBinding  Background}"
                        BorderThickness="1"
                        CornerRadius="3"
                        SnapsToDevicePixels="True">
                                <ContentPresenter HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FFEEEEEE" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#FFCCCCCC" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <!-- 토글이 켜졌을 때의 배경색 및 테두리 변경 -->
                                    <Setter TargetName="Border" Property="Background" Value="#FF232121 " />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FF373734" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.7" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FFEEEEEE" />
                                    <Setter TargetName="Border" Property="Background" Value="#FF9D9D9D" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FlatRoundedButtonStyle" TargetType="Button" 
                BasedOn="{StaticResource MahApps.Styles.Button.Flat}">
                <!-- 기본 Flat 버튼의 스타일을 기반으로 하고, 여기에 추가 수정 -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Border"
                    Background="{TemplateBinding Background}"
    
                         BorderThickness="1"
                         CornerRadius="3"  
                           SnapsToDevicePixels="True">
                                <ContentPresenter HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <!-- 마우스 오버 시 배경색(원하는 값으로 수정) -->
                                    <!--<Setter TargetName="Border" Property="Background" Value="#595e5e"/>-->

                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FFEEEEEE"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <!-- 클릭 시 배경색(원하는 값으로 수정) -->
                                    <Setter TargetName="Border" Property="Background" Value="#FFCCCCCC"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.7" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FF6C6C88"/>
                                    <Setter TargetName="Border" Property="Background" Value="#FF373734"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DeckContextMenuStyle" TargetType="ContextMenu">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContextMenu">
                            <Border Background="#CCFFFFFF" CornerRadius="6" Padding="4">
                                <StackPanel IsItemsHost="True" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!-- Deck 스타일 DataGrid -->
            <Style x:Key="DeckDataGridStyle" TargetType="DataGrid">
                <Setter Property="Background" Value="{DynamicResource PanleColor}"/>
                <Setter Property="BorderBrush" Value="#FF292929"/>
                <Setter Property="BorderThickness" Value="1"/>
                <!--<Setter Property="CornerRadius" Value="10"/>-->
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black"
                                  Direction="270"
                                  ShadowDepth="3"
                                  Opacity="0.2"
                                  BlurRadius="6"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="AutoGenerateColumns" Value="False"/>
                <Setter Property="RowBackground" Value="#FF545353"/>
                <Setter Property="AlternatingRowBackground" Value="#F9F9F9"/>
                <Setter Property="ColumnHeaderStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="Background" Value="#FF2D2C2B"/>
                            <Setter Property="Foreground" Value="#FFAFACAC"/>
                            <Setter Property="Height" Value="25"/>
                            <Setter Property="Padding" Value="10,0"/>
                            <Setter Property="BorderBrush" Value="#FF2A2C2D"/>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="CellStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Padding" Value="8"/>
                            <Setter Property="BorderThickness" Value="0,0,0,1"/>
                            <Setter Property="BorderBrush" Value="#FF565656"/>
                            <Setter Property="Foreground" Value="#FFAFACAC"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#FFAEC2D6"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>



        </ResourceDictionary>

    </Window.Resources>
    <Grid>
        <Border
            Background ="{DynamicResource  MaterialDesign.Brush.Background}"
            CornerRadius="6" BorderThickness="0"
            BorderBrush="{DynamicResource  MaterialDesignLightSeparatorBackground}">
            <Grid Background="{StaticResource PanleColor}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="175"/>
                    <RowDefinition Height="240"/>
                    <RowDefinition Height="240"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Orientation="Horizontal" Height="30" 
                            Background="{StaticResource TitleColor}">
                    <TextBlock Text="Ampp Configuration" FontWeight="Bold"
                               Margin="10,0,0,0"  VerticalAlignment="Center"
                               FontSize="18" Foreground="{DynamicResource MahApps.Brushes.Gray1}"/>

                    <Button x:Name="CloseButton" Content="X" Width="25" Height="25" 
                           Click="CloseButton_Click" Margin ="535,0,0,0"
                           Style="{StaticResource FlatRoundedButtonStyle}"/>
                </StackPanel>

                <StackPanel Grid.Row="1" Orientation="Vertical" Margin="2">
                    <Grid Background="{DynamicResource  PanleColor1}" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="Greanel Setting" Background="#FF2D2C2B"
                                   Grid.Row="0" Grid.ColumnSpan="2" Height="30"
                                   VerticalAlignment="Center" 
                                   TextAlignment="Center"
                                   FontSize="16" 
                                   Foreground="{DynamicResource ButtonForegroundColor}"/>

                        <TextBlock Text="Platform URL :" 
                                   Grid.Row="1" Grid.Column="0" 
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Right"
                                   Margin="10,0,10,0"
                                   FontSize="14" Foreground="{DynamicResource ButtonForegroundColor}"/>

                        <TextBlock Text="Platform Key :" 
                                   Grid.Row="2" Grid.Column="0" 
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Right"
                                   Margin="10,0,10,0"
                                   FontSize="14" Foreground="{DynamicResource ButtonForegroundColor}"/>
                        <TextBlock Text="Work Node :" 
                                   Grid.Row="3" Grid.Column="0" 
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Right"
                                   Margin="10,0,10,0"
                                   FontSize="14" Foreground="{DynamicResource ButtonForegroundColor}"/>
                        <TextBlock Text="Fabric :" 
                                   Grid.Row="4" Grid.Column="0" 
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Right"
                                   Margin="10,0,10,7"
                                   FontSize="14" Foreground="{DynamicResource ButtonForegroundColor}"/>

                        <TextBox x:Name="PlatformUrlTextBox" 
                                 Text="{Binding PlatformUrl}"
                                  Grid.Row="1" Grid.Column="1"  Margin="2,2,10,2"
                                  FontSize="14" Foreground="{DynamicResource ButtonForegroundColor}"
                                  Background="{DynamicResource PanleColor}" 
                                  BorderBrush="{DynamicResource ButtonBorderColor}"
                                  BorderThickness="1"/>
                        <TextBox x:Name="PlatformKeyTextBox" 
                                 Text="{Binding PlatformKey}"
                                  Grid.Row="2" Grid.Column="1"  Margin="2,2,10,2"
                                  FontSize="14" Foreground="{DynamicResource ButtonForegroundColor}"
                                  Background="{DynamicResource PanleColor}" 
                                  BorderBrush="{DynamicResource ButtonBorderColor}"
                                  BorderThickness="1"/>
                        <TextBox x:Name="WorkNodeTextBox" 
                                    Text="{Binding WorkNode}"
                                  Grid.Row="3" Grid.Column="1"  Margin="2,2,10,2"
                                  FontSize="14" Foreground="{DynamicResource ButtonForegroundColor}"
                                  Background="{DynamicResource PanleColor}" 
                                  BorderBrush="{DynamicResource ButtonBorderColor}"
                                  BorderThickness="1"/>

                        <TextBox x:Name="FabricTextBox" 
                                    Text="{Binding Fabric}"
                                  Grid.Row="4" Grid.Column="1" Margin="2,2,10,7"
                                  FontSize="14" Foreground="{DynamicResource ButtonForegroundColor}"
                                  Background="{DynamicResource PanleColor}" 
                                  BorderBrush="{DynamicResource ButtonBorderColor}"
                                  BorderThickness="1"/>
                    </Grid>

                </StackPanel>

                <StackPanel Grid.Row="2" Margin="2">
                    <DataGrid Grid.Row="1" 
                              materialDesign:DataGridAssist.CellPadding="4 2 2 2"
                            materialDesign:DataGridAssist.ColumnHeaderPadding="4 2 2 2"
                            AutoGenerateColumns="False"
                            CanUserAddRows="False"
                            SelectionMode="Single"
                            SelectionUnit="FullRow"
                            FontSize="12"     
                            SelectedItem="{Binding SelectedPortItem}" 
                            ItemsSource="{Binding PortDataInfoList}"  >

                        <DataGrid.Columns>
                            <materialDesign:DataGridTextColumn Width="50" Header="Port" IsReadOnly="True">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}"
                                            BasedOn="{StaticResource MaterialDesignDataGridColumnHeader }">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding}" TextAlignment="Center" TextWrapping="Wrap" />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FontSize" Value="14"/>
                                        <Setter Property="Height" Value="40"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>

                                <materialDesign:DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="TextAlignment" Value="Center"/>
                                        <Setter Property="Height" Value="25"/>
                                    </Style>

                                </materialDesign:DataGridTextColumn.ElementStyle>

                                <materialDesign:DataGridTextColumn.Binding>
                                    <Binding Path="PortName">
                                    </Binding>
                                </materialDesign:DataGridTextColumn.Binding>
                            </materialDesign:DataGridTextColumn>

                            <materialDesign:DataGridComboBoxColumn
                                    Width="80"
                                    Header="Type"
                                    IsEditable="True"
                                    materialDesign:HintAssist.Hint="TypeList"
                                    ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor,
                                   AncestorType={x:Type DataGrid}}, Path=DataContext.PortTypeList}"
                                    SelectedValueBinding="{Binding Type}">

                                <DataGridComboBoxColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}"
                                            BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding}" TextAlignment="Center" TextWrapping="Wrap" />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FontSize" Value="14"/>
                                        <Setter Property="Height" Value="40"/>

                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGridComboBoxColumn.HeaderStyle>


                            </materialDesign:DataGridComboBoxColumn>

                            <materialDesign:DataGridComboBoxColumn
                                         Width="80"
                                         Header="SelectPort"
                                         IsEditable="True"
                                         ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}},
                                         Path=DataContext.SeletePortList}"
                                         SelectedValueBinding="{Binding SelectPort}">

                                <DataGridComboBoxColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}"
                                             BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding}" TextAlignment="Center" TextWrapping="Wrap" />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FontSize" Value="14"/>
                                        <Setter Property="Height" Value="40"/>

                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGridComboBoxColumn.HeaderStyle>
                            </materialDesign:DataGridComboBoxColumn>


                            <materialDesign:DataGridTextColumn Width="1*" Header="WorkLoad1" >
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}"
                                         BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding}" TextAlignment="Center" TextWrapping="Wrap" />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FontSize" Value="14"/>
                                        <Setter Property="Height" Value="40"/>

                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>

                                <materialDesign:DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="TextAlignment" Value="Left"/>
                                    </Style>
                                </materialDesign:DataGridTextColumn.ElementStyle>
                                <materialDesign:DataGridTextColumn.Binding>
                                    <Binding Path="WorkLoad1">
                                    </Binding>
                                </materialDesign:DataGridTextColumn.Binding>
                            </materialDesign:DataGridTextColumn>



                            <materialDesign:DataGridTextColumn Width="1*" Header="WorkLoad2" >
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}"
                                         BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding}" TextAlignment="Center" TextWrapping="Wrap" />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FontSize" Value="14"/>
                                        <Setter Property="Height" Value="40"/>

                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>


                                <materialDesign:DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="TextAlignment" Value="Left"/>
                                    </Style>
                                </materialDesign:DataGridTextColumn.ElementStyle>
                                <materialDesign:DataGridTextColumn.Binding>
                                    <Binding Path="WorkLoad2">
                                    </Binding>
                                </materialDesign:DataGridTextColumn.Binding>
                            </materialDesign:DataGridTextColumn>


                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>

                <StackPanel Grid.Row="3" Margin="2" >

                    <DataGrid Grid.Row="2" Grid.ColumnSpan="5" 
                      materialDesign:DataGridAssist.CellPadding="4 2 2 2"
                      materialDesign:DataGridAssist.ColumnHeaderPadding="4 2 2 2"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      SelectionMode="Single"
                      SelectionUnit="FullRow"
                      FontSize="12"     
                      ItemsSource="{Binding PortDataInfoList}" >

                        <DataGrid.Columns>
                            <materialDesign:DataGridTextColumn Width="50" Header="Port" IsReadOnly="True" >
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}"
                                        BasedOn="{StaticResource MaterialDesignDataGridColumnHeader }">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding}" TextAlignment="Center" TextWrapping="Wrap" />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FontSize" Value="14"/>
                                        <Setter Property="Height" Value="40"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>

                                <materialDesign:DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="TextAlignment" Value="Center"/>
                                        <Setter Property="Height" Value="25"/>
                                    </Style>

                                </materialDesign:DataGridTextColumn.ElementStyle>

                                <materialDesign:DataGridTextColumn.Binding>
                                    <Binding Path="PortName">
                                    </Binding>
                                </materialDesign:DataGridTextColumn.Binding>
                            </materialDesign:DataGridTextColumn>

                            <materialDesign:DataGridTextColumn Width="1*" Header="Macros1" >
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}"
                                       BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding}" TextAlignment="Center" TextWrapping="Wrap" />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FontSize" Value="14"/>
                                        <Setter Property="Height" Value="40"/>

                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>

                                <materialDesign:DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="TextAlignment" Value="Left"/>
                                    </Style>
                                </materialDesign:DataGridTextColumn.ElementStyle>
                                <materialDesign:DataGridTextColumn.Binding>
                                    <Binding Path="Macros1">
                                    </Binding>
                                </materialDesign:DataGridTextColumn.Binding>
                            </materialDesign:DataGridTextColumn>

                            <materialDesign:DataGridTextColumn Width="1*" Header="Macros2" >
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}"
                                       BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding}" TextAlignment="Center" TextWrapping="Wrap" />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FontSize" Value="14"/>
                                        <Setter Property="Height" Value="40"/>

                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>

                                <materialDesign:DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="TextAlignment" Value="Left"/>
                                    </Style>
                                </materialDesign:DataGridTextColumn.ElementStyle>
                                <materialDesign:DataGridTextColumn.Binding>
                                    <Binding Path="Macros2">
                                    </Binding>
                                </materialDesign:DataGridTextColumn.Binding>
                            </materialDesign:DataGridTextColumn>

                        </DataGrid.Columns>
                    </DataGrid>

                </StackPanel>

                <StackPanel Grid.Row="4" Orientation="Horizontal"  >
                    <Button x:Name="butSave" Content="Save" Width="100" Height="30"
                            Click="SaveButton_Click" Margin="280,0,0,0"
                            Style="{StaticResource FlatRoundedButtonStyle}"/>
                    <Button x:Name="butCloase" Content="Cloase" Width="100" Height="30"
                            Click="CloaseButton_Click" Margin="10,0,0,0"
                            Style="{StaticResource FlatRoundedButtonStyle}"/>
                </StackPanel>

            </Grid>

        </Border>
    </Grid>

</Window>

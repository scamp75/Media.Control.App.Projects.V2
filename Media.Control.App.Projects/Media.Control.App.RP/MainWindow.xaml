<Window x:Class="Media.Control.App.RP.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:materialDesignConverters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
        xmlns:local="clr-namespace:Media.Control.App.RP"
        xmlns:control="clr-namespace:Media.Control.App.RP.Controls"
        xmlns:model="clr-namespace:Media.Control.App.RP.Model" xmlns:sys="clr-namespace:System;assembly=System.Runtime"
        mc:Ignorable="d"
        WindowStyle="None"
        AllowsTransparency="True" 
        ResizeMode="CanResizeWithGrip"
        Background="Transparent"
        MouseDown="Window_MouseDown"
        SizeChanged="Window_SizeChanged"
        Loaded="Window_Loaded"
        Title="MainWindow" Height="1100" Width="450" MinWidth="450" MaxWidth="450"
        TextElement.Foreground="{DynamicResource MaterialDesign.Brush.Foreground}"
        >
    <!--MaxHeight="850" MaxWidth="450" MinHeight="350" MinWidth="450"-->

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.SplitButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ProgressBar.xaml" />
            </ResourceDictionary.MergedDictionaries>


            <Style x:Key="AudioLevelProgressBar" TargetType="ProgressBar">
                <Setter Property="Orientation" Value="Vertical"/>
                <Setter Property="Minimum" Value="0"/>
                <Setter Property="Maximum" Value="100"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="Green"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="IsIndeterminate" Value="False"/>
            </Style>

            <!--<Style x:Key="AudioLevelProgressBar" TargetType="ProgressBar">
                <Setter Property="Foreground" Value="Green"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ProgressBar">
                            <Grid>
                                <Border Background="{TemplateBinding Background}" CornerRadius="3"/>
                                <Rectangle x:Name="PART_Track" Fill="LightGray" RadiusX="3" RadiusY="3"/>
                                <Rectangle x:Name="PART_Indicator" Fill="Green" RadiusX="3" RadiusY="3"
                                   HorizontalAlignment="Left" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Value" Value="0">
                                    <Setter TargetName="PART_Indicator" Property="Width" Value="0"/>
                                </Trigger>
                                <Trigger Property="Value" Value="{x:Static sys:Double.NaN}">
                                    <Setter TargetName="PART_Indicator" Property="Width" Value="0"/>
                                </Trigger>
                                <Trigger Property="IsIndeterminate" Value="True">
                                    <Setter TargetName="PART_Indicator" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="Value" Value="0.7">
                                    <Setter TargetName="PART_Indicator" Property="Fill" Value="Red"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value}" Value="0.7">
                                    <Setter TargetName="PART_Indicator" Property="Fill" Value="Red"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->

          

            <Storyboard x:Key="HideWindowStoryboard">
                <DoubleAnimation Storyboard.TargetProperty="Top"
                  From="0" To="-500" Duration="0:0:0.5"/>
            </Storyboard>

            <Storyboard x:Key="ShowWindowStoryboard">
                <DoubleAnimation Storyboard.TargetProperty="Top"
                  From="-500" To="0" Duration="0:0:0.5"/>
            </Storyboard>
            
            <SolidColorBrush x:Key="YellowBrush" Color="Yellow" />
            <SolidColorBrush x:Key="RedBrush" Color="Red" />
            <SolidColorBrush x:Key="ButtonBackColor" Color="#FF373734"/>
            <SolidColorBrush x:Key="ButtonBorderColor" Color="#FF52524E"/>
            <SolidColorBrush x:Key="PanleColor" Color="#333333"/>
            <SolidColorBrush x:Key="TitleColor" Color="#FF1E1E1F"/>
            <SolidColorBrush x:Key="TimePanleColor" Color="#FF6C6C88"/>
            <SolidColorBrush x:Key="ButtonForegroundColor" Color="#FFCECECE"/>

            <SolidColorBrush x:Key="ActiveBorderBrush" Color="#FFB7FD05" />
            <SolidColorBrush x:Key="ProgressBarColor" Color="Green" />
            <SolidColorBrush x:Key="InactiveBorderBrush" Color="#FF373734" />


            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <model:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter"/>
            <model:LevelToBrushConverter x:Key="LevelToBrushConverter"  
                              LowBrush="{StaticResource YellowBrush}"  
                              HighBrush="{StaticResource RedBrush}"  
                              Threshold="0.7"/>


        </ResourceDictionary>


      
        
    </Window.Resources>


    <!--BorderBrush="{DynamicResource MaterialDesignLightSeparatorBackground}"-->
    <!---->
    <Border x:Name="WindowBorder" 
        Background ="{DynamicResource MaterialDesign.Brush.Background}"    
            CornerRadius="6"
            BorderBrush="{StaticResource InactiveBorderBrush}"
            BorderThickness="2"
            VerticalAlignment ="Stretch"  HorizontalAlignment="Stretch"
            Padding="3">

        <Border.Style>
            <Style TargetType="Border">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                            To="#FFB7FD05" Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                            To="#FF373734" Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>


        <Grid Background ="{DynamicResource MaterialDesign.Brush.Background}" 
              VerticalAlignment ="Stretch"  HorizontalAlignment="Stretch">
            <Grid.RowDefinitions >
                <RowDefinition Height="35"/>
                <RowDefinition Height="250"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <!-- tital Bar-->
            <StackPanel Grid.Row="0" 
                Background ="{DynamicResource MaterialDesign.Brush.Background}">
                <StackPanel.Resources>
                    <system:Double x:Key="IconSize">18</system:Double>
                    <system:Double x:Key="ButtonWidth">24</system:Double>
                </StackPanel.Resources>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding TitleMaxWidth}"/>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Content="{Binding ControlName}" 
                        Foreground="{DynamicResource MaterialDesign.Brush.Foreground}"
                        FontSize="14" FontWeight="Bold" 
                        HorizontalContentAlignment="Left"
                        VerticalContentAlignment="Center"/>

                    <TextBlock Grid.Column="1" Margin="0,5,0,0" FontSize="14" 
                               Foreground="WhiteSmoke" TextAlignment="Center" Text="Gan" 
                               Style="{StaticResource MaterialDesignBody2TextBlock }" />

                    <ToggleButton Grid.Column="2"
                        Style="{StaticResource MaterialDesignSwitchToggleButton}"
                        ToolTip="Gan">
                        <materialDesign:ToggleButtonAssist.SwitchTrackOnBackground>
                            <SolidColorBrush Color="OrangeRed" />
                        </materialDesign:ToggleButtonAssist.SwitchTrackOnBackground>
                        <materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                            <SolidColorBrush Color="White" />
                        </materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                    </ToggleButton>


                    <Button Grid.Column="3" Width="28" Height="28" HorizontalAlignment="Center" VerticalAlignment="Center"
                        IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                        Style="{StaticResource MaterialDesignIconButton}"
                        ToolTip="최소화"
                        Command="{Binding ActionCommand.Command_Min}">
                        <materialDesign:PackIcon
                            Width="{StaticResource IconSize}"
                            Height="{StaticResource IconSize}"
                            Kind="WindowMinimize" Cursor="" RenderTransformOrigin="18.833,1571.75" />
                    </Button>

                    <Button Grid.Column="4"  Width="28" Height="28" HorizontalAlignment="Center" VerticalAlignment="Center"
                        IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                        Style="{StaticResource MaterialDesignIconButton}"
                        ToolTip="최대화"
                        Command="{Binding Command_Max}">
                        <materialDesign:PackIcon
                            Width="{StaticResource IconSize}"
                            Height="{StaticResource IconSize}"
                            Kind="WindowMaximize" />
                    </Button>

                    <Button Grid.Column="5" Width="28" Height="28" HorizontalAlignment="Center" VerticalAlignment="Center"
                        IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                        Style="{StaticResource MaterialDesignIconButton}"
                        ToolTip="종료"
                        Command="{Binding Command_Close}">
                        <materialDesign:PackIcon
                            Width="{StaticResource IconSize}"
                            Height="{StaticResource IconSize}"
                            Kind="WindowClose" />
                    </Button>
                </Grid>


            </StackPanel>

            <!-- Preview image -->
            <StackPanel Grid.Row="1" Width="auto">
                <Grid Grid.Row="1" AllowDrop="True" Background="Black" DragEnter="PreviewImage_DragEnter" Drop="PreviewImage_Drop"  Margin="0,1,0,1" >
                    <!--HorizontalAlignment="Stretch" VerticalAlignment="Stretch"-->
                    <Image x:Name="PreviewImage" Stretch="Fill" 
                            AllowDrop="True"/>

                    <Grid x:Name="LiftProgressBar" Height="250" Width="10"  HorizontalAlignment="Left" 
                          Margin="1,0,0,0"  Opacity="0.7" Panel.ZIndex="1" >
                        <!-- 전체 배경 -->
                        <Border Background="Transparent" />
                        <!-- 녹색 구간 (0.0 ~ 0.5) -->
                        <Rectangle x:Name="LBarGreen" Fill="Green" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"/>
                        <!-- 노랑색 구간 (0.5 ~ 0.7) -->
                        <Rectangle x:Name="LBarYellow" Fill="Yellow" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"/>
                        <!-- 빨강 구간 (0.7 ~ 1.0) -->
                        <Rectangle x:Name="LBarRed" Fill="Red" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"/>
                    </Grid>

                    <Grid x:Name="ReigthProgressBar" Height="250" Width="10"  HorizontalAlignment="Left" 
                        Margin="12,0,0,0"  Opacity="0.7" Panel.ZIndex="1"  >
                        <!-- 전체 배경 -->
                        <Border Background="Transparent" />
                        <!-- 녹색 구간 (0.0 ~ 0.5) -->
                        <Rectangle x:Name="RBarGreen" Fill="Green" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"/>
                        <!-- 노랑색 구간 (0.5 ~ 0.7) -->
                        <Rectangle x:Name="RBarYellow" Fill="Yellow" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"/>
                        <!-- 빨강 구간 (0.7 ~ 1.0) -->
                        <Rectangle x:Name="RBarRed" Fill="Red" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"/>
                    </Grid>


                    <!-- 첫 번째 ProgressBar: 오른쪽에 배치 -->
                    <!--<ProgressBar x:Name="LiftProgressBar" Style="{Binding AudioLevelProgressBar}"
                           Orientation="Vertical" 
                           Minimum="0" 
                           Maximum="1" 
                           Height="250"
                          Value="{Binding AudioLeftValue}" 
                          Foreground="Green"
                          Background="Transparent"
                           Width="10"
                           Opacity="0.7"
                           Panel.ZIndex="1" HorizontalAlignment="Left" Margin="12,0,0,0"/>-->

                    <!-- 두 번째 ProgressBar: 왼쪽에 배치 -->
                    <!--<ProgressBar x:Name="ReigthProgressBar"   Style="{Binding AudioLevelProgressBar}"
                             Orientation="Vertical" 
                             Minimum="0" 
                             Maximum="1" 
                             Value="{Binding AudioReightValue}"  
                             Height="250" 
                             Foreground="Green"
                             Background="Transparent"
                             Width="10"
                             HorizontalAlignment="Left"
                             Margin="1,0,0,0"
                             Opacity="0.7"
                             Panel.ZIndex="1" />-->

                </Grid>
            </StackPanel>

            <!-- Player 인경우 -->
            <StackPanel Grid.Row="2" Width="auto"  
                         Visibility="{Binding CurrentControlType,
                          Converter={StaticResource EnumToVisibilityConverter},
                          ConverterParameter={x:Static model:EnmControlType.Player}}">
                <control:PlayerStateControl x:Name="playerStateControl" />
                <control:PlayerButtonControl x:Name="playerButton" Width="auto"/>
                <control:PlayergroupControl x:Name="playerGroupControl" 
                                            ButtonClicked="GroupButton_ButtonClicked" 
                                            SelectPlayList="{Binding SelectPlayList, Mode=TwoWay}"/>
            </StackPanel>

            <!--Recoder 인경우-->
            <StackPanel Grid.Row="2" Width="auto" Visibility="{Binding CurrentControlType, 
                            Converter={StaticResource EnumToVisibilityConverter},
                            ConverterParameter={x:Static model:EnmControlType.Recoder}}">

                <control:RecordStateControl x:Name="RecorderStateControl" Height="auto" Width="auto" />
                <control:RecorderButtonControl x:Name="RecorderButton" 
                         InputItems="{Binding InputItemsLIst}" 
                         SelectInput="{Binding SelectInput, Mode=TwoWay}" Height="auto" Width="auto" />
                <control:RecorderSettingControl x:Name="RecorderSettingControl"  Height="auto" Width="auto"/>
            </StackPanel>

            <!-- Media List Control -->
            <StackPanel Grid.Row="3" Height="auto" >
                <control:MediaListControl 
                    x:Name="MediaListControl" 
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch"
                    AllowDrop="True"
                    DragEnter="MediaListControl_DragEnter"
                    Drop="MediaListControl_Drop"
                    MouseDown="MediaListControl_MouseDown"/>

            </StackPanel>


            <StackPanel Grid.Row="4" Height="35">
                <Grid Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>


                    <materialDesign:Card Grid.Column="0"
                          Padding="5" 
                          UniformCornerRadius="20">
                        <ProgressBar
                            IsIndeterminate="{Binding AppState}"
                            Style="{StaticResource MaterialDesignCircularProgressBar}"
                            Value="50" />
                    </materialDesign:Card>

                    <!--<TextBlock x:Name="State" Grid.Column="1" Margin="10,0,0,0" 
                               Text="Application " 
                               VerticalAlignment="Center" Foreground="White" 
                               FontSize="14" FontWeight="Bold"/>-->
                    <TextBlock x:Name="Application" Grid.Column="2" 
                               Text="{Binding ApplicationName}" Margin="10,0,0,0" 
                               VerticalAlignment="Center" Foreground="White" 
                               FontSize="14" FontWeight="Bold"/>

                </Grid>
            </StackPanel>
        </Grid>
    </Border>



</Window>

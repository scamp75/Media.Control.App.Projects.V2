<UserControl x:Class="Media.Control.App.RP.Controls.RecorderButtonControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Media.Control.App.RP.Controls"
             
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:model="clr-namespace:Media.Control.App.RP.Model"
             mc:Ignorable="d" 
             Width="450"
             Height="92"
             TextElement.Foreground="{DynamicResource MaterialDesign.Brush.Foreground}">
    <!--Height="{Binding ControlHeight,RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}"-->
    <!--Height="95"-->

    <UserControl.Resources>
        <ResourceDictionary>
            <Thickness x:Key="ControlMargin">0 5 0 0</Thickness>
            <SolidColorBrush x:Key="ButtonBackColor" Color="#FF373734"/>
            <SolidColorBrush x:Key="ButtonBorderColor" Color="#FF52524E"/>
            <SolidColorBrush x:Key="PanleColor" Color="#333333"/>
            <SolidColorBrush x:Key="TitleColor" Color="#FF1E1E1F"/>
            <SolidColorBrush x:Key="TimePanleColor" Color="#FF6C6C88"/>
            <SolidColorBrush x:Key="ButtonForegroundColor" Color="#FFCECECE"/>
            <SolidColorBrush x:Key="BaceBorderThickness" Color="Black"/>
            <SolidColorBrush x:Key="Bace1BorderThickness" Color="#FF211E1E"/>
            <!--<Style BasedOn="{StaticResource MahApps.Styles.Button.Reveal}" TargetType="{x:Type Button}" />-->
            <!--<Style BasedOn="{StaticResource MahApps.Styles.ToggleButton}" TargetType="{x:Type  ToggleButton}" />-->

            <Style x:Key="DarkToggleButtonStyle" TargetType="ToggleButton">
                <Setter Property="Foreground" Value="#FFCECECE"/>
                <Setter Property="Background" Value="#333333"/>
                <Setter Property="BorderBrush" Value="#555555"/>
                <Setter Property="BorderThickness" Value="1.5"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="5,2"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="MinWidth" Value="50"/>
                <Setter Property="MinHeight" Value="30"/>
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="Auto"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                        Padding="{TemplateBinding Padding}"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!-- Hover 상태 -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#444444"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#666666"/>
                                </Trigger>
                                <!-- Pressed 상태 -->
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#555555"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#777777"/>
                                </Trigger>
                                <!-- Checked 상태 -->
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#FF272727"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#444444"/>
                                    <Setter Property="Foreground" Value="Red"/>
                                </Trigger>
                                <!-- Disabled 상태 -->
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="#222222"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#444444"/>
                                    <Setter Property="Foreground" Value="#666666"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <model:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

        </ResourceDictionary>

    </UserControl.Resources>

    <Border BorderBrush="{StaticResource ButtonBorderColor}" BorderThickness="0,0,0,1">

        <Grid Background="{StaticResource TitleColor}"
              Height="{Binding ControlHeight,RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}">

            <Grid.RowDefinitions>
                <RowDefinition Height="35"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Horizontal" 
                    Background="{StaticResource TitleColor}" 
                    FocusManager.IsFocusScope="True"
                    FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}">
                <Grid Width="450">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="145"/>
                        <ColumnDefinition Width="50"/>

                    </Grid.ColumnDefinitions>

                    <ToggleButton Grid.Column="0" x:Name="ButPrepared" Command="{Binding CommandEject, RelativeSource={RelativeSource AncestorType=UserControl}}"
                             Style="{StaticResource DarkToggleButtonStyle}"
                             ToolTip="Prepared" Width="45" Height="30"  Margin="5,1,0,0" 
                                  IsChecked="{Binding EndChecked}"
                             Click="ToggleButton_Click"
                                  Foreground="GreenYellow"
                                  FontWeight="Bold"
                             HorizontalAlignment="Left">
                        <ToggleButton.ContentTemplate>
                            <DataTemplate>
                                <iconPacks:PackIconSimpleIcons Kind="AirPlayVideo" />
                            </DataTemplate>
                        </ToggleButton.ContentTemplate>
                    </ToggleButton>

                    <ToggleButton Grid.Column="1" x:Name="ButRecord" Command="{Binding CommandRecodrder, RelativeSource={RelativeSource AncestorType=UserControl}}" ToolTip="Record" 
                        Style="{StaticResource DarkToggleButtonStyle}"
                        IsChecked="{Binding FrsitChecked}" Click="ToggleButton_Click"
                        Margin="2,1,0,0"
                        Width="45" Height="30"  
                        HorizontalAlignment="Left">
                        <ToggleButton.ContentTemplate>
                            <DataTemplate>
                                <iconPacks:PackIconTypicons Kind="MediaRecord" />
                            </DataTemplate>
                        </ToggleButton.ContentTemplate>
                    </ToggleButton>

                    <ToggleButton Grid.Column="2" x:Name="ButStop" Command="{Binding CommandStop, RelativeSource={RelativeSource AncestorType=UserControl}}" ToolTip="ReWind" 
                        Style="{StaticResource DarkToggleButtonStyle}"
                                  IsChecked="{Binding RWChecked}" Click="ToggleButton_Click"
                        Width="45" Height="30"   Margin="0,1,0,0"
                        HorizontalAlignment="Left">
                        <ToggleButton.ContentTemplate>
                            <DataTemplate>
                                <iconPacks:PackIconEntypo Kind="ControllerStop" />
                            </DataTemplate>
                        </ToggleButton.ContentTemplate>
                    </ToggleButton>




                    <Label  Grid.Column="3" Content="InPut : " FontSize="12" Margin="45,5,0,0" Foreground="{DynamicResource MaterialDesign.Brush.Foreground}"/>
                    <ComboBox Grid.Column="4" x:Name="InputList" Style="{StaticResource  MaterialDesignComboBox}" 
                          SelectionChanged="InputList_SelectionChanged" 
                          SelectedItem="{Binding SelectInput, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}"
                          Foreground="#FF3AA9EF" Width="130" FontSize="11"
                          ItemsSource="{Binding InputItems, RelativeSource={RelativeSource AncestorType=UserControl}}" Margin="6,0,4,0" />
                    <ToggleButton x:Name="butOption" Style="{StaticResource DarkToggleButtonStyle}"
                                  Grid.Column="5" FontSize="10" Height="25" Width="47" 
                                  Content="Option" Click="butOption_Click" HorizontalAlignment="Left" Margin="2,0,0,0"/>

                </Grid>
            </StackPanel>

            <StackPanel Grid.Row="1" Orientation="Horizontal">
                <!--<Label Content="InPut : " FontSize="12" Foreground="{DynamicResource MaterialDesign.Brush.Foreground}"/>
                <ComboBox x:Name="InputList" Style="{StaticResource  MaterialDesignComboBox}" 
                          SelectionChanged="InputList_SelectionChanged"
                           SelectedItem="{Binding SelectInput, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}" Foreground="#FF3AA9EF" 
                          ItemsSource="{Binding InputItems, RelativeSource={RelativeSource AncestorType=UserControl}}" Width="170"/>-->

                <CheckBox Content="Duration"  Grid.Column="4" VerticalContentAlignment="Center" 
                    HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0"
                          FontSize="11"
                    IsChecked="{Binding isDuration, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}"
                    Style="{StaticResource MaterialDesignDarkCheckBox}" />

                <local:TimeCodeControl x:Name="DurationTimeCode" 
                         Height="26" Margin="12,1,1,1"
                        Visibility="{Binding isDuration, RelativeSource={RelativeSource AncestorType=UserControl}
                        , Converter={StaticResource BoolToVisibilityConverter}}"
                         Width="110" Grid.Column="3" 
                         HorizontalAlignment="Right" 
                      Foreground="{DynamicResource MaterialDesign.Brush.Foreground}" />



            </StackPanel>
            <StackPanel Grid.Row="2" Orientation="Horizontal">

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="125"/>
                        <ColumnDefinition Width="105"/>
                        <ColumnDefinition Width="125"/>
                    </Grid.ColumnDefinitions>

                    <CheckBox x:Name="ChkStart" Grid.Column="0" Content="StartTime" Margin="5,0,5,0"
                        VerticalContentAlignment="Center" 
                        VerticalAlignment="Center"  FontSize="11"
                        HorizontalAlignment="Center"
                              Checked="ChkStart_checked"
                        IsChecked="{Binding isStartTime, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}"
                        Style="{StaticResource MaterialDesignDarkCheckBox}" />

                    <mah:TimePicker x:Name="StartTimeAt" Grid.Column="1" Background="{StaticResource PanleColor}" FontSize="11" 
                        Style="{StaticResource  MahApps.Styles.Control.WindowCommands}"
                        Visibility="{Binding isStartTime, RelativeSource={RelativeSource AncestorType=UserControl}
                           , Converter={StaticResource BoolToVisibilityConverter}}"
                        mah:TextBoxHelper.ClearTextButton="{Binding Path=IsChecked, ElementName=DateTimePickerClearTextButton, Mode=TwoWay}"
                        Culture="{Binding CurrentCulture, Mode=OneWay}" Margin="0,3,0,0" 
                        HandVisibility="{Binding Path=SelectedItem, ElementName=DateTimePickerHandVisibility, Mode=TwoWay}"
                        IsEnabled="{Binding Path=IsChecked, ElementName=DateTimePickerIsEnabled, Mode=TwoWay}"
                        IsReadOnly="{Binding Path=IsChecked, ElementName=DateTimePickerIsReadOnly, Mode=TwoWay}"
                        PickerVisibility="{Binding Path=SelectedItem, ElementName=DateTimePickerPickerVisibility, Mode=TwoWay}"
                        SelectedDateTime="{Binding Path=SelectedDateTime, ElementName=DateTimePicker, UpdateSourceTrigger=PropertyChanged}"
                        SelectedTimeFormat="{Binding Path=SelectedItem, ElementName=DateTimePickerTimeFormat}" />


                    <CheckBox x:Name="ChkStop" Grid.Column="2" Content="StopTime" Margin="8,0,5,0"
                        VerticalContentAlignment="Center"  FontSize="11"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                              Checked="ChkStop_checked"
                        IsChecked="{Binding isStopTime, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}"
                        Style="{StaticResource MaterialDesignDarkCheckBox}" />


                    <mah:TimePicker x:Name="StopTimeAt" Grid.Column="3" Background="{StaticResource PanleColor}" FontSize="11" 
                        Style="{StaticResource  MahApps.Styles.Control.WindowCommands}"
                        Visibility="{Binding isStopTime, RelativeSource={RelativeSource AncestorType=UserControl}
                           , Converter={StaticResource BoolToVisibilityConverter}}"
                        mah:TextBoxHelper.ClearTextButton="{Binding Path=IsChecked, ElementName=DateTimePickerClearTextButton, Mode=TwoWay}"
                        Culture="{Binding CurrentCulture, Mode=OneWay}" Margin="0,3,0,0" 
                        HandVisibility="{Binding Path=SelectedItem, ElementName=DateTimePickerHandVisibility, Mode=TwoWay}"
                        IsEnabled="{Binding Path=IsChecked, ElementName=DateTimePickerIsEnabled, Mode=TwoWay}"
                        IsReadOnly="{Binding Path=IsChecked, ElementName=DateTimePickerIsReadOnly, Mode=TwoWay}"
                        PickerVisibility="{Binding Path=SelectedItem, ElementName=DateTimePickerPickerVisibility, Mode=TwoWay}"
                        SelectedDateTime="{Binding Path=SelectedDateTime, ElementName=DateTimePicker,UpdateSourceTrigger=PropertyChanged}"
                        SelectedTimeFormat="{Binding Path=SelectedItem, ElementName=DateTimePickerTimeFormat}"  />
                </Grid>
            </StackPanel>




        </Grid>

    </Border>

</UserControl>

<UserControl x:Class="Media.Control.App.RP.Controls.PlayerStateControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Media.Control.App.RP.Controls"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" 
             d:Height="110" d:Width="450"
             TextElement.Foreground="{DynamicResource MaterialDesign.Brush.Foreground}">

    <UserControl.Resources>
        <ResourceDictionary>

            <SolidColorBrush x:Key="ButtonBackColor" Color="#FF373734"/>
            <SolidColorBrush x:Key="ButtonBorderColor" Color="#FF52524E"/>
            <SolidColorBrush x:Key="PanleColor" Color="#333333"/>
            <SolidColorBrush x:Key="TitleColor" Color="#FF1E1E1F"/>
            <SolidColorBrush x:Key="SubTitleColor" Color="#FF272727"/>
            <SolidColorBrush x:Key="TimePanleColor" Color="#FF6C6C88"/>
            <SolidColorBrush x:Key="BaceBorderThickness" Color="Black"/>
            <SolidColorBrush x:Key="ButtonForegroundColor" Color="#FFCECECE"/>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <Style x:Key="DarkSliderStyle" TargetType="Slider">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="#333333"/>
                <Setter Property="IsMoveToPointEnabled" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Slider">
                            <Grid>
                                <!-- 트랙의 배경 (트랙 영역에 둥근 모서리를 추가) -->
                                <Border x:Name="TrackBackground" 
                                Background="#555555"
                                Height="8"
                                VerticalAlignment="Center"
                                CornerRadius="1" />
                                <!-- 트랙 -->
                                <Track x:Name="PART_Track" 
                               VerticalAlignment="Center"
                               Focusable="False">
                                    <Track.Thumb>
                                        <Thumb Width="8" Height="20">
                                            <Thumb.Template>
                                                <ControlTemplate TargetType="Thumb">
                                                    <!-- Border를 이용해 둥근 모서리로 Thumb 디자인 -->
                                                    <Border Background="#666666"
                                                    BorderBrush="#888888"
                                                    BorderThickness="1"
                                                    CornerRadius="2" />
                                                </ControlTemplate>
                                            </Thumb.Template>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <Style x:Key="FlatRoundedButtonStyle" TargetType="Button" 
                        BasedOn="{StaticResource MahApps.Styles.Button.Flat}">
                <!-- 기본 Flat 버튼의 스타일을 기반으로 하고, 여기에 추가 수정 -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="3"  
                                    
                                SnapsToDevicePixels="True">
                                <ContentPresenter HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <!-- 마우스 오버 시 배경색(원하는 값으로 수정) -->
                                    <Setter TargetName="Border" Property="Background" Value="#595e5e"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <!-- 클릭 시 배경색(원하는 값으로 수정) -->
                                    <Setter TargetName="Border" Property="Background" Value="#FFCCCCCC"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--<Style BasedOn="{StaticResource MahApps.Styles.Button }" TargetType="{x:Type Button}" />-->
        </ResourceDictionary>
    </UserControl.Resources>



    <Border BorderBrush="{StaticResource ButtonBackColor}" BorderThickness="0,1,0,3">
        <Grid Background="{StaticResource TitleColor}" >
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition Height="22"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="32"/>
            </Grid.RowDefinitions>

            <!-- ProgressBar + Overlay Canvas -->
            <Grid Name="ProgressBarContainer" Height="15" Grid.Row="0" VerticalAlignment="Bottom">
                <ProgressBar Name="DarkProgressBar" 
                    Minimum="0" 
                    Maximum="{Binding MaxDuration, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    Value="{Binding SliderValue , RelativeSource={RelativeSource AncestorType=UserControl}}"
                    Background="#444" 
                    Foreground="#0af"
                    BorderBrush="#666" 
                    BorderThickness="1"
                             
                    Margin="0,0,0,0"         
                    PreviewMouseLeftButtonDown="Slider_MouseLeftButtonDown"/>
                <Canvas Name="MarkerCanvas" IsHitTestVisible="True"/>
            </Grid>

            <!--425-->
            <Border  Grid.Row="1"  BorderThickness="0,1,0,1" 
                        BorderBrush="{StaticResource ButtonBackColor}">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="128.5"/>
                        <ColumnDefinition Width="235.5"/>
                        <ColumnDefinition Width="36"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>

                    <!-- 다크 스타일 jog/shuttle Slider -->
                    <Slider x:Name="JogShuttleSlider"
                        Style="{StaticResource DarkSliderStyle}"
                        Width="360"
                        Height="20"
                        Minimum="-10"
                        Maximum="10"
                        IsSnapToTickEnabled="True"
                        TickFrequency="{Binding CountTick,RelativeSource={RelativeSource AncestorType=UserControl}}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                            ValueChanged="JogShuttleSlider_ValueChanged"
                            MouseDown="JogShuttleSlider_PreviewMouseLeftButtonDown"
                            PreviewMouseLeftButtonDown="JogShuttleSlider_PreviewMouseLeftButtonDown" 
                            PreviewMouseLeftButtonUp="JogShuttleSlider_PreviewMouseLeftButtonUp"
                        ToolTip="{Binding Value, ElementName=JogShuttleSlider}" Grid.ColumnSpan="2" />


                    <!--Foreground="{DynamicResource MaterialDesign.Brush.Foreground}"-->
                    <TextBlock Grid.Column="2"
                               Width="20"
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center"
                               Foreground="Red"
                               TextAlignment="Right"
                                FontSize="10"
                                Text="{Binding JogShuttleValue, RelativeSource={RelativeSource AncestorType=UserControl}}"/>

                    <Button Grid.Column="3" x:Name="ButJogShuttle" 
                           Height="18" 
                            Width="30"
                            Margin="5,1,5,1"
                           Background="{StaticResource ButtonBackColor}" 
                           BorderBrush="{StaticResource ButtonBorderColor}" 
                           Click="ButJogShuttle_Click"
                           HorizontalContentAlignment="Center" 
                           VerticalContentAlignment="Center"
                            Style="{StaticResource FlatRoundedButtonStyle}"
                           Content="{Binding ButJogShuttleName, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                           FontSize="7" 
                           Foreground="Aqua"  />
                </Grid>


            </Border>

            <!--<
            
           -->

            <!--</StackPanel>-->

            <StackPanel Grid.Row="2" Grid.RowSpan="2" Grid.ColumnSpan="3" >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="35"/>
                        <ColumnDefinition Width="35"/>
                        <ColumnDefinition Width="35"/>
                        <ColumnDefinition Width="90"/>

                        <ColumnDefinition Width="137"/>
                        <ColumnDefinition Width="35"/>
                        <ColumnDefinition Width="35"/>
                        <ColumnDefinition Width="35"/>

                    </Grid.ColumnDefinitions>


                    <local:TimeCodeControl x:Name="InTimeCode" Grid.Row="0" Grid.ColumnSpan="3"
                          Height="26" Margin="1,1,1,1" Width="102" 
                       Foreground="{DynamicResource MaterialDesign.Brush.Foreground}" />

                    <Button x:Name="butGotoIn" Grid.Row="1" Style="{StaticResource FlatRoundedButtonStyle}"
                            Grid.Column="0" Height="29" Width="33" Click="Button_Click"  
                            Background="{StaticResource ButtonBackColor}" 
                            BorderBrush="{StaticResource ButtonBorderColor}" 
                            Command="{Binding CommandInGo}" 
                            FontWeight="Bold"
                            HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                            Margin="1,0,1,0"  Content="GO" FontSize="11" Foreground="#FFC3C3C3" />

                    <Button x:Name="butInPoint" Grid.Row="1" Click="Button_Click"  
                            Style="{StaticResource FlatRoundedButtonStyle}"
                                   Grid.Column="1" Height="29" Width="33" 
                                  Background="{StaticResource ButtonBackColor}" 
                                  BorderBrush="{StaticResource ButtonBorderColor}"
                                  Command="{Binding CommandIn}"
                                  Foreground="#FF62EF04" >
                        <Button.ContentTemplate>
                            <DataTemplate>
                                <iconPacks:PackIconPicolIcons Kind="ArrowSansLowerleft" Width="12" />
                            </DataTemplate>
                        </Button.ContentTemplate>
                    </Button>

                    <Button x:Name="butInDelete" Grid.Row="1" Click="Button_Click" 
                            Style="{StaticResource FlatRoundedButtonStyle}"
                            Grid.Column="2" Height="29" Width="33" 
                            Background="{StaticResource ButtonBackColor}" BorderBrush="{StaticResource ButtonBorderColor}"
                              Command="{Binding CommandInDelete}"
                              Foreground="#FFC3C3C3" >
                        <Button.ContentTemplate>
                            <DataTemplate>
                                <iconPacks:PackIconFontAwesome Kind="TrashSolid"  Width="12" />
                            </DataTemplate>
                        </Button.ContentTemplate>
                    </Button>


                    <Label Grid.Row="0" Grid.Column="3" Grid.RowSpan="2" Content="{Binding PlayerState, RelativeSource={RelativeSource AncestorType=UserControl}}"
                           HorizontalContentAlignment="Center" 
                          Margin="0,1,1,1" BorderBrush="{StaticResource ButtonBorderColor}"  
                           BorderThickness="1" VerticalContentAlignment="Center" 
                           Foreground="White" FontSize="18" FontWeight="Bold"/>


                    <Border Grid.Row="0" Grid.Column="4"
                            Margin="1,1,0,1" BorderBrush="{StaticResource ButtonBorderColor}" BorderThickness="1,1,1,1">
                        <TextBlock Text="{Binding CurrentTimecode, RelativeSource={RelativeSource AncestorType=UserControl}}"  TextAlignment="Center"
                            Margin="1,0,0,1"  Foreground="White" FontSize="20" FontWeight="Bold"/>
                    </Border>


                    <Border Grid.Row="1" Grid.Column="4" 
                            Margin="1,1,0,1" BorderBrush="{StaticResource ButtonBorderColor}" BorderThickness="1,1,1,1">
                        <TextBlock Grid.Row="1" Grid.Column="4"  Text="{Binding RemainTimecode, RelativeSource={RelativeSource AncestorType=UserControl}}"  TextAlignment="Center"
                            Margin="1,0,0,1"  Foreground="White" FontSize="20" FontWeight="Bold"/>

                    </Border>

                    <local:TimeCodeControl x:Name="OutTimeCode" Grid.Row="0" Grid.ColumnSpan="3"
                               Height="26" Margin="1,2,0,2" Width="102" 
                            Foreground="{DynamicResource MaterialDesign.Brush.Foreground}" Grid.Column="5" />


                    <Button x:Name="butGotoOut" Click="Button_Click"  
                            Style="{StaticResource FlatRoundedButtonStyle}"
                            Grid.Row="1" Grid.Column="5" Height="29" Width="33" 
                            FontWeight="Bold"
                            Background="{StaticResource ButtonBackColor}" BorderBrush="{StaticResource ButtonBorderColor}" 
                            Command="{Binding CommandOutGo}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                            Margin="1,0,0,0"  Content="GO" FontSize="11" Foreground="#FFC3C3C3" />

                    <Button x:Name="butOutPoint" Click="Button_Click" Style="{StaticResource FlatRoundedButtonStyle}"
                                  Grid.Row="1"  Grid.Column="6" Height="29" Width="33" 
                           Background="{StaticResource ButtonBackColor}" BorderBrush="{StaticResource ButtonBorderColor}"
                               Command="{Binding CommandOut}"
                               Foreground="#FF62EF04" >
                        <Button.ContentTemplate>
                            <DataTemplate>
                                <iconPacks:PackIconPicolIcons Kind="ArrowSansLowerright"  Width="12"/>
                            </DataTemplate>
                        </Button.ContentTemplate>
                    </Button>

                    <Button x:Name="butOutDelete" Click="Button_Click"  Style="{StaticResource FlatRoundedButtonStyle}"
                                  Grid.Row="1"  Grid.Column="7" Height="29" Width="33" 
                           Background="{StaticResource ButtonBackColor}" BorderBrush="{StaticResource ButtonBorderColor}"
                               Command="{Binding CommandOutDelete}"
                               Foreground="#FFC3C3C3" >
                        <Button.ContentTemplate>
                            <DataTemplate>
                                <iconPacks:PackIconFontAwesome Kind="TrashSolid"  Width="12"/>
                            </DataTemplate>
                        </Button.ContentTemplate>
                    </Button>

                </Grid>
            </StackPanel>

            <!--<Border Grid.Row="3" Grid.ColumnSpan="3" Background="{StaticResource TitleColor }" BorderThickness="1,1,1,1"
                    BorderBrush="{StaticResource  MahApps.Brushes.Border.NonActive}">
            </Border>-->

        </Grid>
    </Border>


</UserControl>

<UserControl x:Class="Media.Control.App.MeidaBrowser.Controls.MediaListControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Media.Control.App.MeidaBrowser.Controls"
             xmlns:model="clr-namespace:Media.Control.App.MeidaBrowser.Model"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
             xmlns:wfi="clr-namespace:System.Windows.Forms.Integration;assembly=WindowsFormsIntegration"
             mc:Ignorable="d" 
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             Width="570"
             Foreground="{DynamicResource MaterialDesign.Brush.Foreground}"
             VerticalAlignment="Stretch" HorizontalAlignment="Stretch">

    <UserControl.Resources>
        <ResourceDictionary>

            <model:DateTimeToStringConverter x:Key="DateTimeToStringConverter"/>
            <model:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter"/>
            <model:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <model:ImagePathToDrawingImageConverter x:Key="ImagePathToDrawingImageConverter"/>
            <model:StringToColorConverter x:Key="StringToColorConverter"/>

            <SolidColorBrush x:Key="ButtonBackColor" Color="#FF373734"/>
            <SolidColorBrush x:Key="ButtonBorderColor" Color="#FF52524E"/>
            <SolidColorBrush x:Key="PanleColor" Color="#333333"/>
            <SolidColorBrush x:Key="TitleColor" Color="#FF1E1E1F"/>
            <SolidColorBrush x:Key="SubTitleColor" Color="#FF272727"/>
            <SolidColorBrush x:Key="TimePanleColor" Color="#FF6C6C88"/>
            <SolidColorBrush x:Key="ButtonForegroundColor" Color="#FFCECECE"/>

            <Style x:Key="DeckContextMenuStyle" TargetType="ContextMenu">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContextMenu">
                            <Border Background="#CCFFFFFF" CornerRadius="6" Padding="4">
                                <StackPanel IsItemsHost="True" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Label">
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Right"/>
            </Style>

            <Style TargetType="TextBox">
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Margin" Value="10,0,0,0"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackColor}"/>
            </Style>

            <Style BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="{x:Type Button}" />


            <Style x:Key="FlatRoundedButtonStyle" TargetType="Button" 
                    BasedOn="{StaticResource MahApps.Styles.Button.Flat}">
                <!-- 기본 Flat 버튼의 스타일을 기반으로 하고, 여기에 추가 수정 -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Border"
                                  Background="{TemplateBinding Background}"
             
                                  BorderThickness="1"
                                  CornerRadius="3"  
              
                                    SnapsToDevicePixels="True">
                                <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <!-- 마우스 오버 시 배경색(원하는 값으로 수정) -->
                                    <!--<Setter TargetName="Border" Property="Background" Value="#595e5e"/>-->

                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FF6C6C88"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <!-- 클릭 시 배경색(원하는 값으로 수정) -->
                                    <Setter TargetName="Border" Property="Background" Value="#FFCCCCCC"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.7" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FF6C6C88"/>
                                    <Setter TargetName="Border" Property="Background" Value="#FF373734"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DarkToggleButtonStyle" TargetType="ToggleButton">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="#333333"/>
                <Setter Property="BorderBrush" Value="#555555"/>
                <Setter Property="BorderThickness" Value="1.5"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="4,2"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!-- Hover 상태 -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#444444"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#666666"/>
                                </Trigger>
                                <!-- Pressed 상태 -->
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#555555"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#777777"/>
                                </Trigger>
                                <!-- Checked 상태 -->
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#FF1E1E1F"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#FF272727"/>
                                    <Setter Property="Foreground" Value="Bisque"/>
                                </Trigger>
                                <!-- Disabled 상태 -->
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="#222222"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#444444"/>
                                    <Setter Property="Foreground" Value="#666666"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--ListViewItem 스타일 정의-->
            <Style TargetType="ListViewItem">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Style.Triggers>
                    <!--선택된 항목 색상 변경-->
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="DarkGray"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                    <!--마우스 오버 색상 변경-->
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Black"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--다크 테마 카드 스타일-->
            <Style x:Key="DarkCardStyle" TargetType="Border">
                <Setter Property="Background" Value="#2C2C2C"/>
                <!--다크 배경-->
                <Setter Property="CornerRadius" Value="8"/>
                <!--모서리 둥글기-->
                <Setter Property="BorderBrush" Value="#444444"/>
                <!--테두리 색상-->
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="10"/>
                <Setter Property="Margin" Value="10"/>
            </Style>


            <DataTemplate x:Key="MediaItemTemplate">
                <Grid Margin="1"  Background="{Binding State, Converter={StaticResource StringToColorConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="75"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Thumbnail Image -->
                    <Border Grid.Column="0" Height="45" Width="75">
                        <Image Source="{Binding Image}" Stretch="Fill"/>
                    </Border>

                    <!-- Text Information -->
                    <StackPanel Grid.Column="1" Width="680" Margin="10,0,0,0" >
                        <!--Background="{StaticResource TitleColor}">-->
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20"/>
                                <RowDefinition Height="20"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="150"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="250"/>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Row="0" Grid.ColumnSpan="6" Text="{Binding Name}" 
                                FontSize="15" 
                                FontWeight="Bold" 
                                ToolTip="{Binding Name}"
                                Foreground="White"/>


                            <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding Type}" 
                                VerticalAlignment="Center"
                                HorizontalAlignment="Right"
                                FontSize="15" 
                                FontWeight="Bold" 
                                Foreground="#FFF3560C"/>


                            <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Duration}" 
                                VerticalAlignment="Center" Margin="10,0,0,0"
                                FontSize="15" 
                                FontWeight="Bold" 
                                Foreground="Gray"/>

                            <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding InTimeCode}" 
                                VerticalAlignment="Center" HorizontalAlignment="Right"
                                FontSize="12" 
                                Foreground="Gray"/>

                            <TextBlock Grid.Row="1" Grid.Column="3" Text="|" 
                                VerticalAlignment="Center" Margin="6,0,0,0"
                                FontSize="11" 
                                Foreground="Gray"/>

                            <TextBlock Grid.Row="1" Grid.Column="4" Text="{Binding OutTimeCode}" 
                                VerticalAlignment="Center"  Margin="5,0,0,0"
                                FontSize="12" 
                                Foreground="Gray"/>

                            <TextBlock Grid.Row="1" Grid.Column="5" Grid.ColumnSpan="2" Text="{Binding Creator}" 
                                 VerticalAlignment="Center"  Margin="20,0,0,0"
                                 FontSize="12" 
                                 Foreground="Gray"/>


                            <TextBlock Grid.Row="1" Grid.Column="4" Grid.ColumnSpan="2"  Margin="200,0,0,0"
                                      Text="{Binding CreatDate, 
                                             Converter={StaticResource DateTimeToStringConverter}, 
                                             ConverterParameter='yyyy-MM-dd'}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                   FontSize="13" 
                                   FontWeight="Bold" 
                                   Foreground="Gray"/>

                            <TextBlock Grid.Row="1" Grid.Column="6" Grid.ColumnSpan="2" Text="{Binding State}" 
                                  VerticalAlignment="Center"  Margin="10,0,0,0"
                                  FontSize="12" Visibility="Hidden"
                                  Foreground="Gray"/>


                            <CheckBox Grid.RowSpan="2" Grid.Column="7" IsChecked="{Binding isSelect}"/>
                        </Grid>

                    </StackPanel>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="CardMediaItemTemplate">
                <materialDesign:Card MouseEnter="Card_MouseEnter"
                                         MouseLeave="Card_MouseLeave"
                                         
                     Background="{Binding State, Converter={StaticResource StringToColorConverter}}"
                     Tag="{Binding Proxy}"
                     Padding="1" 
                     HorizontalAlignment="Center"
                     Width="165" Height="140">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <!-- 이미지 -->
                            <RowDefinition Height="*"/>
                            <!-- 텍스트 정보 -->
                        </Grid.RowDefinitions>

                        <Border x:Name="PicPreview" Grid.Row="0" Height="90" Width="150" Margin="1" Visibility="Hidden" >
                            <wfi:WindowsFormsHost Grid.Row="0" Name="WindowsFormsHostControl" Tag="{Binding Proxy}" >
                                <wf:Panel x:Name="mp4Handel" Dock="Fill" 
                                                      MouseEnter="mp4Handel_MouseEnter"
                                                      MouseLeave="mp4Handel_MouseLeave"
                                                      MouseDown="mp4Handel_MouseDown"
                                                        MouseUp="mp4Handel_MouseUp"/>
                            </wfi:WindowsFormsHost>
                        </Border>

                        <Border x:Name="ImgPreview" Grid.Row="0" Height="90" Width="150" Margin="1">
                            <Image Source="{Binding Image}" Stretch="Fill" MouseDown="Image_MouseDown" />
                        </Border>

                        <!-- Text Information -->
                        <StackPanel Grid.Row="1" Margin="5,10,5,5">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0" Text="{Binding Type}" 
                                       FontSize="10" FontWeight="Bold"
                                       Foreground="#FFF3560C" 
                                       Margin="0,0,0,1"/>

                                <TextBlock Grid.Column="1" Text="{Binding Duration}" 
                                      VerticalAlignment="Center"
                                      FontSize="12" 
                                      FontWeight="Bold" 
                                      Foreground="Gray"/>
                            </Grid>

                            <TextBlock x:Name="ClipName" Text="{Binding Name}" 
                                      FontSize="9" 
                                      FontWeight="Bold" 
                                      Foreground="White" 
                                      ToolTip="{Binding Name}"/>

                        </StackPanel>
                    </Grid>
                </materialDesign:Card>

            </DataTemplate>


        </ResourceDictionary>

    </UserControl.Resources>

    <!--{StaticResource ButtonBackColor}-->
    <Border BorderBrush="{StaticResource ButtonBackColor}" BorderThickness="1">
        <Grid Background="{StaticResource TitleColor}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Horizontal" Height="35" Background="{StaticResource SubTitleColor}" HorizontalAlignment="Left" Width="744">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="580"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>

                    <Button x:Name="ButPreview" Content="Preview" Command="{Binding Command_PorxyPreview, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                            Grid.Column="0" Margin="0,4,0,3" Height="28" Click="ButPreview_Click" 
                            Style="{StaticResource FlatRoundedButtonStyle}" Width="73"
                            Background="{StaticResource ButtonBackColor}" FontSize="12" 
                        FontWeight="Bold" Foreground="{StaticResource ButtonForegroundColor}" HorizontalAlignment="Left"/>

                    <ToggleButton x:Name="butList" Grid.Column="2"
                                       Style="{StaticResource DarkToggleButtonStyle}"
                                      Command="{Binding CommandFrsit, RelativeSource={RelativeSource AncestorType=UserControl}}" ToolTip="Image" 
                             Click="ToggleButton_Click"
                             BorderBrush="{StaticResource ButtonBorderColor}" 
                             Width="30" Height="30"  Background="{StaticResource ButtonBackColor}" 
                             Foreground="{StaticResource ButtonForegroundColor}">
                        <ToggleButton.ContentTemplate>
                            <DataTemplate>
                                <iconPacks:PackIconZondicons Kind="ViewList" />
                            </DataTemplate>
                        </ToggleButton.ContentTemplate>
                    </ToggleButton>

                    <ToggleButton x:Name="butImage" Grid.Column="3"
                                       Style="{StaticResource DarkToggleButtonStyle}"
                                      Command="{Binding CommandFrsit, RelativeSource={RelativeSource AncestorType=UserControl}}" ToolTip="List" 
                             Click="ToggleButton_Click"
                             BorderBrush="{StaticResource ButtonBorderColor}"
                             Width="30" Height="30"  Background="{StaticResource ButtonBackColor}" 
                             Foreground="{StaticResource ButtonForegroundColor}">
                        <ToggleButton.ContentTemplate>
                            <DataTemplate>
                                <iconPacks:PackIconZondicons Kind="ViewTile" />
                            </DataTemplate>
                        </ToggleButton.ContentTemplate>
                    </ToggleButton>
                </Grid>
            </StackPanel>


            <Border Grid.Row="1" BorderBrush="{StaticResource ButtonBackColor}" BorderThickness="1"
                 Visibility="{Binding MeidaListStyle, 
                     Converter={StaticResource EnumToVisibilityConverter},
                     ConverterParameter=Image}">

                <ListView 
                         x:Name="MediaView_Image"
                          ItemsSource="{Binding MeidaListItems}"
                         Background="{StaticResource SubTitleColor}"
                         VerticalAlignment="Stretch"
                         HorizontalAlignment="Stretch"
                         ScrollViewer.VerticalScrollBarVisibility="Auto"
                         SelectionMode="Single"
                      VirtualizingStackPanel.IsVirtualizing="False" 
                    ScrollViewer.CanContentScroll="False"
                         ItemTemplate="{StaticResource CardMediaItemTemplate}">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="4" IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                </ListView>
            </Border>

            <Border 
                Grid.Row="1" BorderBrush="{StaticResource ButtonBackColor}" BorderThickness="1" 
                    Visibility="{Binding MeidaListStyle, 
                        Converter={StaticResource EnumToVisibilityConverter},
                        ConverterParameter=List}">
                <ListView Style="{StaticResource MahApps.Styles.ListView }"
                    x:Name="MediaView_List" 
                    ItemsSource="{Binding MeidaListItems}"
                          SelectedItem="{Binding SelectItem}"
                    Background="{StaticResource SubTitleColor}"
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch"
                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                    SelectionMode="Single"
                    ItemTemplate="{StaticResource MediaItemTemplate}"
                    PreviewMouseLeftButtonDown="ListView_PreviewMouseLeftButtonDown"
                    MouseMove="ListView_MouseMove">
                    <ListView.ContextMenu>
                        <ContextMenu Style="{StaticResource  MahApps.Styles.ContextMenu}">
                            <MenuItem x:Name="Delete" Header="Delete"  Click="MenuItem1_Click" >
                                <MenuItem.Icon>
                                    <iconPacks:FontAwesome  Kind="DeleteLeftSolid" />
                                </MenuItem.Icon>
                            </MenuItem>

                            <!--<MenuItem Header="Clean" Click="MenuItem2_Click" >
                                <MenuItem.Icon>
                                    <iconPacks:PackIconMaterial Kind="Delete" />
                                </MenuItem.Icon>
                            </MenuItem>-->
                        </ContextMenu>
                    </ListView.ContextMenu>
                </ListView>
            </Border>



        </Grid>

    </Border>

</UserControl>

<UserControl x:Class="Mpv.Player.App.Controls.ButtonControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Mpv.Player.App.Controls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" Height="48" Width="435">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <SolidColorBrush x:Key="ButtonBackColor" Color="#FF373734"/>
            <SolidColorBrush x:Key="ButtonBorderColor" Color="#FF52524E"/>
            <SolidColorBrush x:Key="PanleColor" Color="#333333"/>
            <SolidColorBrush x:Key="TitleColor" Color="#FF1E1E1F"/>
            <SolidColorBrush x:Key="TimePanleColor" Color="#FF6C6C88"/>
            <SolidColorBrush x:Key="ButtonForegroundColor" Color="#FFCECECE"/>

            <Style x:Key="FlatRoundedButtonStyle" TargetType="Button" 
                BasedOn="{StaticResource MahApps.Styles.Button.Flat}">
                <!-- 기본 Flat 버튼의 스타일을 기반으로 하고, 여기에 추가 수정 -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Border"
                    Background="{TemplateBinding Background}"
               
                    BorderThickness="1"
                    CornerRadius="3"  
                
                      SnapsToDevicePixels="True">
                                <ContentPresenter HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <!-- 마우스 오버 시 배경색(원하는 값으로 수정) -->
                                    <!--<Setter TargetName="Border" Property="Background" Value="#595e5e"/>-->

                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FFEEEEEE"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <!-- 클릭 시 배경색(원하는 값으로 수정) -->
                                    <Setter TargetName="Border" Property="Background" Value="#FFCCCCCC"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.7" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FF6C6C88"/>
                                    <Setter TargetName="Border" Property="Background" Value="#FF373734"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="FlatRoundedToggleButtonStyle" TargetType="ToggleButton"
                BasedOn="{StaticResource MahApps.Styles.ToggleButton.Flat}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border x:Name="Border"
                  Background="{TemplateBinding  BorderBrush}"
                  BorderBrush="{TemplateBinding  Background}"
                  BorderThickness="1"
                  CornerRadius="3"
                  SnapsToDevicePixels="True">
                                <ContentPresenter HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FFEEEEEE" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#FFCCCCCC" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <!-- 토글이 켜졌을 때의 배경색 및 테두리 변경 -->
                                    <Setter TargetName="Border" Property="Background" Value="#FF232121 " />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FF373734" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.7" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FFEEEEEE" />
                                    <Setter TargetName="Border" Property="Background" Value="#FF9D9D9D" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <DataTemplate x:Key="PlayTemplate">
                <iconPacks:PackIconRemixIcon Kind = "PlayFill" />
            </DataTemplate>
            <DataTemplate x:Key="StopTemplate">
                <iconPacks:PackIconRemixIcon Kind = "PauseMiniFill" />
            </DataTemplate>

            <local:IconTemplateSelector
              x:Key="IconSelector"
              PlayTemplate="{StaticResource PlayTemplate}"
              StopTemplate="{StaticResource StopTemplate}" />

            <Style BasedOn="{StaticResource MahApps.Styles.Button.Reveal}" TargetType="{x:Type Button}" />

        </ResourceDictionary>


    </UserControl.Resources>
    
    <Grid>
        <StackPanel Margin="0,2,0,0" Grid.Row="4" Orientation="Horizontal" Background="{StaticResource TitleColor}" 
                    FocusManager.IsFocusScope="True"
                    FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}">

            <ToggleButton x:Name="ButFrsit" Command="{Binding CommandFrsit, RelativeSource={RelativeSource AncestorType=UserControl}}" ToolTip="Start" 
                    IsChecked="{Binding FrsitChecked}" Click="ToggleButton_Click"  Style="{StaticResource FlatRoundedToggleButtonStyle}" 
                    BorderBrush="{StaticResource ButtonBorderColor}"
                    Width="40" Height="40"  Background="{StaticResource ButtonBackColor}" 
                    Foreground="{StaticResource ButtonForegroundColor}" HorizontalAlignment="Left" Margin="5,0,0,0">
                    <ToggleButton.ContentTemplate>
                        <DataTemplate>
                            <iconPacks:PackIconRemixIcon Kind="SkipBackMiniFill" />
                        </DataTemplate>
                    </ToggleButton.ContentTemplate>
            </ToggleButton>


            <ToggleButton x:Name="ButReWind" Command="{Binding CommandRw, RelativeSource={RelativeSource AncestorType=UserControl}}" ToolTip="ReWind" 
                     IsChecked="{Binding RWChecked}" Click="ToggleButton_Click"  Style="{StaticResource FlatRoundedToggleButtonStyle}" 
               Width="40" Height="40" Background="{StaticResource ButtonBackColor}" 
                BorderBrush="{StaticResource ButtonBorderColor}"
               Foreground="{StaticResource ButtonForegroundColor}" HorizontalAlignment="Left" Margin="2,0,0,0">
                <ToggleButton.ContentTemplate>
                    <DataTemplate>
                        <iconPacks:PackIconPhosphorIcons Kind="CaretDoubleLeftFill" />
                    </DataTemplate>
                </ToggleButton.ContentTemplate>
            </ToggleButton>

            <ToggleButton x:Name="ButBack10Frame" Command="{Binding CommandB10Frame, RelativeSource={RelativeSource AncestorType=UserControl}}" ToolTip="Back 10Frame" 
                     IsChecked="{Binding B10FrmaeChecked}" Click="ToggleButton_Click"  Style="{StaticResource FlatRoundedToggleButtonStyle}" 
               Width="40" Height="40" Background="{StaticResource ButtonBackColor}" 
                BorderBrush="{StaticResource ButtonBorderColor}" 
               Foreground="{StaticResource ButtonForegroundColor}" HorizontalAlignment="Left" Margin="2,0,0,0">
                <ToggleButton.ContentTemplate>
                    <DataTemplate>
                        <iconPacks:PackIconEvaIcons Kind="ArrowheadLeft" />
                    </DataTemplate>
                </ToggleButton.ContentTemplate>
            </ToggleButton>

            <ToggleButton x:Name="ButBack1Frame"  Command="{Binding CommandB1Frame, RelativeSource={RelativeSource AncestorType=UserControl}}" ToolTip="Back 1Frame" 
                     IsChecked="{Binding B1FrmaeChecked}" Click="ToggleButton_Click"  Style="{StaticResource FlatRoundedToggleButtonStyle}" 
                   Width="40" Height="40" Background="{StaticResource ButtonBackColor}" 
                    BorderBrush="{StaticResource ButtonBorderColor}" 
                   Foreground="{StaticResource ButtonForegroundColor}" HorizontalAlignment="Left" Margin="2,0,0,0">
                <ToggleButton.ContentTemplate>
                    <DataTemplate>
                        <iconPacks:PackIconEvaIcons Kind="ArrowIosBackOutline" />
                    </DataTemplate>
                </ToggleButton.ContentTemplate>
            </ToggleButton>


            <ToggleButton x:Name="ButPlay"  
                     Command="{Binding CommandPlayStop, RelativeSource={RelativeSource AncestorType=UserControl}}" ToolTip="Play/Stop" 
                     IsChecked="{Binding PlayChecked}" Click="ToggleButton_Click"  Style="{StaticResource FlatRoundedToggleButtonStyle}" 
                   Width="40" Height="40" Background="{StaticResource ButtonBackColor}" 
                    BorderBrush="{StaticResource ButtonBorderColor}"
                   Content="{Binding IconPlayStop}"
                   Foreground="{StaticResource ButtonForegroundColor}"
                   HorizontalAlignment="Left" Margin="2,0,0,0"
                   ContentTemplateSelector="{StaticResource IconSelector}">
            </ToggleButton>

            <ToggleButton x:Name="ButForward1Frame" Command="{Binding CommandF1Frame, RelativeSource={RelativeSource AncestorType=UserControl}}"
                          ToolTip="Forward 1Frame" Width="40" Height="40"   Style="{StaticResource FlatRoundedToggleButtonStyle}" 
               IsChecked="{Binding F1FrameChecked}" Click="ToggleButton_Click"
                     Background="{StaticResource ButtonBackColor}" 
          BorderBrush="{StaticResource ButtonBorderColor}" 
               Foreground="{StaticResource ButtonForegroundColor}" HorizontalAlignment="Left" Margin="2,0,0,0">
                <ToggleButton.ContentTemplate>
                    <DataTemplate>
                        <iconPacks:PackIconEvaIcons Kind="ArrowIosForwardOutline" />
                    </DataTemplate>
                </ToggleButton.ContentTemplate>
            </ToggleButton>

            <ToggleButton x:Name="ButForward10Frame"  Command="{Binding CommandF10Frame, RelativeSource={RelativeSource AncestorType=UserControl}}"
                          ToolTip="Forward 10Frame" Width="40" Height="40"   Style="{StaticResource FlatRoundedToggleButtonStyle}" 
               IsChecked="{Binding F10FrameChecked}" Click="ToggleButton_Click"
                     Background="{StaticResource ButtonBackColor}" 
          BorderBrush="{StaticResource ButtonBorderColor}" Foreground="{StaticResource ButtonForegroundColor}"
               HorizontalAlignment="Left" Margin="2,0,0,0" >
                <ToggleButton.ContentTemplate>
                    <DataTemplate>
                        <iconPacks:PackIconEvaIcons Kind="ArrowheadRight" />
                    </DataTemplate>
                </ToggleButton.ContentTemplate>
            </ToggleButton>


            <ToggleButton  x:Name="ButFoward" Command="{Binding CommandFF, RelativeSource={RelativeSource AncestorType=UserControl}}"
                           ToolTip="Frist Forward" Width="40" Height="40"  Style="{StaticResource FlatRoundedToggleButtonStyle}" 
                     IsChecked="{Binding FFChecked}" Click="ToggleButton_Click"
               Background="{StaticResource ButtonBackColor}" 
          BorderBrush="{StaticResource ButtonBorderColor}" 
                     Foreground="{StaticResource ButtonForegroundColor}"
               HorizontalAlignment="Left" Margin="2,0,0,0" >
                <ToggleButton.ContentTemplate>
                    <DataTemplate>
                        <iconPacks:PackIconPhosphorIcons Kind="CaretDoubleRightFill" />
                    </DataTemplate>
                </ToggleButton.ContentTemplate>
            </ToggleButton>

            <ToggleButton x:Name="ButEnd" Command="{Binding CommandEnd, RelativeSource={RelativeSource AncestorType=UserControl}}"
                          ToolTip="End" Width="40" Height="40" IsChecked="{Binding EndChecked}"  Style="{StaticResource FlatRoundedToggleButtonStyle}" 
                Background="{StaticResource ButtonBackColor}" 
                          Click="ToggleButton_Click"
          BorderBrush="{StaticResource ButtonBorderColor}" Foreground="{StaticResource ButtonForegroundColor}"
               HorizontalAlignment="Left" Margin="2,0,0,0" >
                <ToggleButton.ContentTemplate>
                    <DataTemplate>
                        <iconPacks:PackIconRemixIcon Kind="SkipForwardMiniFill" />
                    </DataTemplate>
                </ToggleButton.ContentTemplate>
            </ToggleButton>

            <Button Content="Save" Command="{Binding CommandSave, RelativeSource={RelativeSource AncestorType=UserControl}}"  Width="50" Height="40" 
                    Style="{StaticResource FlatRoundedButtonStyle}"
                    Background="{StaticResource ButtonBackColor}" Foreground="#FFF30000" FontSize="14"
              BorderBrush="{StaticResource ButtonBorderColor}" HorizontalAlignment="Left" Margin="2,0,0,0" >
            </Button>
        </StackPanel>


    </Grid>
</UserControl>
